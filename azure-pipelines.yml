trigger:
  branches:
    include:
      - main

variables:
  AZURE_SUBSCRIPTION: 'spn-aks-windows-container-deployment'
  RESOURCE_GROUP: 'rg-apps-passmig-asia-v-santanup-demo'
  AKS_CLUSTER: 'demowinclu001'
  NAMESPACE: 'windows-aks-ns-devops'
  ACR_NAME: 'akswindemoreg'
  IMAGE_NAME: 'windows-container-app'
  IMAGE_TAG: 'v1'
  IMAGE_FULL_PATH: 'akswindemoreg.azurecr.io/windows-container-app:v1'

pool:
  vmImage: 'windows-latest'

stages:
- stage: Deploy
  displayName: Deploy to AKS
  jobs:
  - job: DeployJob
    displayName: Deploy Windows Container App
    steps:

    # Azure CLI Login & ACR Login
    - task: AzureCLI@2
      displayName: 'Login to Azure and ACR'
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Logging into ACR: $(ACR_NAME)"
          az acr login --name $(ACR_NAME)

    # Set AKS context and ensure namespace exists
    - task: AzureCLI@2
      displayName: 'Set AKS Context and Ensure Namespace'
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Setting context to AKS cluster: $(AKS_CLUSTER)"
          az aks get-credentials --resource-group $(RESOURCE_GROUP) --name $(AKS_CLUSTER) --overwrite-existing

          echo "Checking or creating namespace: $(NAMESPACE)"
          kubectl get namespace $(NAMESPACE) || kubectl create namespace $(NAMESPACE)

    # Apply Kubernetes manifests
    - task: AzureCLI@2
      displayName: 'Deploy Kubernetes Manifests'
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Deploying Kubernetes manifests..."
          kubectl apply -f Deployments/00-windows-namespace.yaml
          kubectl apply -f Deployments/01-windows-deployment.yaml -n $(NAMESPACE)
          kubectl apply -f Deployments/02-windows-service.yaml -n $(NAMESPACE)

    # Wait for rollout to complete
    - task: AzureCLI@2
      displayName: 'Wait for Deployment Rollout'
      inputs:
        azureSubscription: $(AZURE_SUBSCRIPTION)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Waiting for rollout to complete..."
          kubectl rollout status deployment/windows-webapp -n $(NAMESPACE)